{"version":3,"sources":["Components/AmountToPayTextField/AmountToPayTextField.module.css","Components/GeneralActionButton/GeneralActionButton.module.css","Components/ExclamationError/ExclamationError.module.css","Components/TextField/TextField.module.css","Components/Grid/Grid.module.css","Components/PaymentFromTo/PaymentFromTo.module.css","Components/SectionLabel/SectionLabel.module.css","Components/PaymentForm/PaymentForm.module.css","Components/AmountToPayForm/AmountToPayForm.module.css","Components/TodaysDate/TodaysDate.module.css","Components/Grid/Grid.js","Components/ExclamationError/ExclamationError.js","Contexts/ValuesContext.js","Components/AmountToPayTextField/AmountToPayTextField.js","Components/SectionLabel/SectionLabel.js","Components/PaymentFromTo/PaymentFromTo.js","Assets/lock.svg","Components/GeneralActionButton/GeneralActionButton.js","Components/AmountToPayForm/AmountToPayForm.js","Components/TodaysDate/TodaysDate.js","Components/TextField/TextField.js","Components/PaymentForm/PaymentForm.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Grid","props","children","columns","className","styles","grid","two","one","ExclamationError","ref","React","createRef","state","shouldDisplay","this","current","classList","add","visible","remove","positionClassNames","labelType","exclamationErrorContainer","forTextField","forAmountToPayTextField","exclamationError","Component","context","createContext","AmountToPayTextField","handleAmountToPayTextFieldContainerClicked","isFocused","amountToPayTextFieldRef","focus","setState","handleAmountToPayTextFieldSetFocused","handleAmountToPayTextFieldBlured","value","isInErrorState","handleTextChange","event","consumerValue","test","target","handleAmountEnteredChanged","amountToPayTextFiedlContainerClassNames","amountToPayTextFieldContainer","focused","error","container","onMouseDown","preventDefault","onKeyDown","role","tabIndex","dollarSignContainer","dollarSign","ValuesContext","Consumer","type","amountToPayTextField","placeholder","onFocus","onBlur","onChange","SectionLabel","sectionLabel","light","dark","PaymentFromTo","name","useContext","to","paymentFromTo","innerContainer","text","GeneralActionButton","useState","isClicked","setClickedState","values","amountEntered","isFormComplete","formCompletionHandler","generalActionButtonClassNames","generalActionButton","incompleteForm","generalActionButtonContainer","clicked","onMouseUp","onMouseLeave","onClick","lockIcon","alt","src","Lock","AmountToPayForm","amountToPayForm","TodaysDate","date","Date","day","getDate","month","getMonth","year","getFullYear","todaysDate","validator","require","TextField","handleFocus","handleBlur","trim","validate","onChangeEvent","textFieldContainerClassNames","textFieldContainer","textField","undefined","PaymentForm","checkIfFormIsComplete","handleEmailChanged","email","handleNameChanged","console","log","overallGrid","paymentForm","Provider","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d47a70ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AmountToPayTextField_container__1TQCN\",\"amountToPayTextFieldContainer\":\"AmountToPayTextField_amountToPayTextFieldContainer__2emL8\",\"focused\":\"AmountToPayTextField_focused__Xmv_W\",\"error\":\"AmountToPayTextField_error__Y__Dm\",\"dollarSignContainer\":\"AmountToPayTextField_dollarSignContainer__1g4PK\",\"dollarSign\":\"AmountToPayTextField_dollarSign__2EZjL\",\"amountToPayTextField\":\"AmountToPayTextField_amountToPayTextField__22d9T\",\"visible\":\"AmountToPayTextField_visible__1uosj\",\"hidden\":\"AmountToPayTextField_hidden__1LNCb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"generalActionButtonContainer\":\"GeneralActionButton_generalActionButtonContainer__2iPR8\",\"clicked\":\"GeneralActionButton_clicked__2g2jY\",\"generalActionButton\":\"GeneralActionButton_generalActionButton__2dBqL\",\"incompleteForm\":\"GeneralActionButton_incompleteForm__2Er8K\",\"lockIcon\":\"GeneralActionButton_lockIcon__VBATR\",\"visible\":\"GeneralActionButton_visible__2iIFm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"exclamationErrorContainer\":\"ExclamationError_exclamationErrorContainer__V8k70\",\"forTextField\":\"ExclamationError_forTextField__3gM7V\",\"forAmountToPayTextField\":\"ExclamationError_forAmountToPayTextField__2GSaH\",\"visible\":\"ExclamationError_visible__oE1oi\",\"exclamationError\":\"ExclamationError_exclamationError__3Me6B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textFieldContainer\":\"TextField_textFieldContainer__1U4LM\",\"focused\":\"TextField_focused__3_EnJ\",\"error\":\"TextField_error__3anvh\",\"textField\":\"TextField_textField__26hke\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Grid_grid__2oUah\",\"one\":\"Grid_one__3AUyB\",\"two\":\"Grid_two__20e12\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paymentFromTo\":\"PaymentFromTo_paymentFromTo__2c8LL\",\"innerContainer\":\"PaymentFromTo_innerContainer__3rojQ\",\"text\":\"PaymentFromTo_text__24bc5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionLabel\":\"SectionLabel_sectionLabel__1MzYB\",\"light\":\"SectionLabel_light__tALaS\",\"dark\":\"SectionLabel_dark__2JGyT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overallGrid\":\"PaymentForm_overallGrid__132KX\",\"paymentForm\":\"PaymentForm_paymentForm__1z_f-\",\"payButton\":\"PaymentForm_payButton__1rm5t\",\"amountToPayForm\":\"PaymentForm_amountToPayForm__2GiE6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"amountToPayForm\":\"AmountToPayForm_amountToPayForm__3-mEj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todaysDate\":\"TodaysDate_todaysDate__2iSRB\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Grid.module.css';\n\nconst Grid = (props) => {\n  const { children } = props;\n  const { columns } = props;\n\n  if (columns === 'two') {\n    return (\n      <div className={`${styles.grid} ${styles.two}`}>\n        {children}\n      </div>\n    );\n  }\n\n  return (\n    <div className={`${styles.grid} ${styles.one}`}>\n      {children}\n    </div>\n  );\n};\n\nGrid.propTypes = {\n  columns: PropTypes.string,\n  children: PropTypes.arrayOf(PropTypes.element)\n};\n\nexport default Grid;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ExclamationError.module.css';\n\nclass ExclamationError extends React.Component {\n  constructor() {\n    super();\n    this.ref = React.createRef();\n    this.state = {\n    };\n  }\n\n  componentDidUpdate() {\n    const { shouldDisplay } = this.props;\n\n    if (this.ref.current && shouldDisplay) {\n      this.ref.current.classList.add(`${styles.visible}`);\n    } else if (this.ref.current && !shouldDisplay) {\n      this.ref.current.classList.remove(`${styles.visible}`);\n    }\n  }\n\n  render() {\n    const { labelType } = this.props;\n\n    let positionClassNames = '';\n\n    if (labelType === 'TextField') {\n      positionClassNames = `${styles.exclamationErrorContainer} ${styles.forTextField}`;\n    } else {\n      positionClassNames = `${styles.exclamationErrorContainer} ${styles.forAmountToPayTextField}`;\n    }\n\n    return (\n      <div\n        className={positionClassNames}\n        ref={this.ref}\n      >\n        <span className={styles.exclamationError}>!</span>\n      </div>\n    );\n  }\n}\n\nExclamationError.propTypes = {\n  labelType: PropTypes.string,\n  shouldDisplay: PropTypes.bool\n};\n\nexport default ExclamationError;\n","import React from 'react';\n\nconst context = React.createContext();\n\nexport default context;\n","import React from 'react';\nimport styles from './AmountToPayTextField.module.css';\nimport ExclamationError from '../ExclamationError/ExclamationError';\nimport ValuesContext from '../../Contexts/ValuesContext';\n\nclass AmountToPayTextField extends React.Component {\n  constructor() {\n    super();\n\n    this.amountToPayTextFieldRef = React.createRef(null);\n    this.state = {\n      isFocused: false,\n      isInErrorState: false,\n      value: ''\n    };\n  }\n\n  handleAmountToPayTextFieldContainerClicked = () => {\n    const { isFocused } = this.state;\n\n    if (this.amountToPayTextFieldRef !== null) {\n      if (!isFocused) {\n        this.amountToPayTextFieldRef.current.focus();\n        this.setState({\n          isFocused: true\n        });\n      }\n    }\n  }\n\n  handleAmountToPayTextFieldSetFocused = () => {\n    this.setState({\n      isFocused: true\n    });\n  }\n\n  handleAmountToPayTextFieldBlured = () => {\n    const { value } = this.state;\n\n    this.setState({\n      isFocused: false,\n      isInErrorState: value === ''\n    });\n  }\n\n  handleTextChange = (event, consumerValue) => {\n    const regex = /^(([1-9]{1}\\d{0,2})?)$/;\n\n    if (!regex.test(event.target.value)) {\n      this.setState({\n      });\n    } else {\n      this.setState({\n        value: event.target.value\n      }, () => {\n        const { value } = this.state;\n        consumerValue.handleAmountEnteredChanged(value);\n      });\n    }\n  }\n\n  render() {\n    const { isInErrorState } = this.state;\n    const { value } = this.state;\n    const { isFocused } = this.state;\n\n    let amountToPayTextFiedlContainerClassNames = '';\n\n    if (isFocused) {\n      amountToPayTextFiedlContainerClassNames = `${styles.amountToPayTextFieldContainer} ${styles.focused}`;\n    } else if (isInErrorState) {\n      amountToPayTextFiedlContainerClassNames = `${styles.amountToPayTextFieldContainer} ${styles.error}`;\n    } else {\n      amountToPayTextFiedlContainerClassNames = `${styles.amountToPayTextFieldContainer}`;\n    }\n\n    return (\n      <div className={styles.container}>\n        <div\n          className={amountToPayTextFiedlContainerClassNames}\n          onMouseDown={(event) => {\n            if (!isFocused) {\n              this.handleAmountToPayTextFieldContainerClicked();\n              event.preventDefault();\n            } else if (isFocused) {\n              if (event.target !== this.amountToPayTextFieldRef.current) {\n                event.preventDefault();\n              }\n            }\n          }}\n          onKeyDown={this.handleAmountToPayTextFieldContainerClicked}\n          role=\"textbox\"\n          tabIndex={0}\n        >\n          <div className={styles.dollarSignContainer}>\n            <span className={styles.dollarSign}>$</span>\n          </div>\n          <ValuesContext.Consumer>\n            {(consumerValue) => (\n              <input\n                value={value}\n                type=\"text\"\n                className={styles.amountToPayTextField}\n                placeholder=\"0.00\"\n                onFocus={this.handleAmountToPayTextFieldSetFocused}\n                onBlur={this.handleAmountToPayTextFieldBlured}\n                ref={this.amountToPayTextFieldRef}\n                onChange={(event) => {\n                  this.handleTextChange(event, consumerValue);\n                }}\n              />\n            )}\n          </ValuesContext.Consumer>\n        </div>\n        <ExclamationError shouldDisplay={isInErrorState && !isFocused} />\n      </div>\n    );\n  }\n}\n\nexport default AmountToPayTextField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './SectionLabel.module.css';\n\nconst SectionLabel = (props) => {\n  const { children } = props;\n  const { type } = props;\n\n  return (\n    <p className={`${styles.sectionLabel} ${type === 'light' ? `${styles.light}` : `${styles.dark}`}`}>{children}</p>\n  );\n};\n\nSectionLabel.propTypes = {\n  children: PropTypes.string,\n  type: PropTypes.string\n};\n\nexport default SectionLabel;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './PaymentFromTo.module.css';\nimport ValuesContext from '../../Contexts/ValuesContext';\n\nconst PaymentFromTo = (props) => {\n  const { name } = useContext(ValuesContext);\n  const { to } = props;\n\n  return (\n    <div className={styles.paymentFromTo}>\n      <div className={styles.innerContainer}>\n        <p className={styles.text}>\n          From:\n          {` ${name}`}\n        </p>\n        <p className={styles.text}>\n          To:\n          {` ${to}`}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nPaymentFromTo.propTypes = {\n  to: PropTypes.string\n};\n\nexport default PaymentFromTo;\n","export default __webpack_public_path__ + \"static/media/lock.090927c7.svg\";","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './GeneralActionButton.module.css';\nimport ValuesContext from '../../Contexts/ValuesContext';\nimport Lock from '../../Assets/lock.svg';\n\nconst GeneralActionButton = (props) => {\n  const [isClicked, setClickedState] = useState(false);\n\n  const values = useContext(ValuesContext);\n  const { amountEntered } = values;\n  const { isFormComplete } = values;\n  const { formCompletionHandler } = values;\n  const { children } = props;\n\n  let generalActionButtonClassNames = '';\n\n  if (isFormComplete) {\n    generalActionButtonClassNames = `${styles.generalActionButton}`;\n  } else {\n    generalActionButtonClassNames = `${styles.generalActionButton} ${styles.incompleteForm}`;\n  }\n\n  return (\n    <div\n      className={!isClicked ? `${styles.generalActionButtonContainer}` : `${styles.generalActionButtonContainer} ${styles.clicked}`}\n      onMouseDown={() => {\n        setClickedState(true);\n      }}\n      onMouseUp={() => {\n        setClickedState(false);\n      }}\n      onMouseLeave={() => {\n        setClickedState(false);\n      }}\n      onClick={() => {\n        formCompletionHandler();\n      }}\n      onKeyDown={() => {\n      }}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <div\n        className={generalActionButtonClassNames}\n      >\n        <span>\n          {amountEntered !== '' ? `Pay $${amountEntered}.00` : children}\n        </span>\n        <img\n          className={isFormComplete ? `${styles.lockIcon} ${styles.visible}` : `${styles.lockIcon}`}\n          alt=\"\"\n          src={Lock}\n        />\n      </div>\n    </div>\n  );\n};\n\nGeneralActionButton.propTypes = {\n  children: PropTypes.string\n};\n\nexport default GeneralActionButton;\n","import React from 'react';\nimport styles from './AmountToPayForm.module.css';\nimport Grid from '../Grid/Grid';\nimport AmountToPayTextField from '../AmountToPayTextField/AmountToPayTextField';\nimport SectionLabel from '../SectionLabel/SectionLabel';\nimport PaymentFromTo from '../PaymentFromTo/PaymentFromTo';\nimport GeneralActionButton from '../GeneralActionButton/GeneralActionButton';\n\nclass AmountToPayForm extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n    };\n  }\n\n  render() {\n    return (\n      <div className={styles.amountToPayForm}>\n        <Grid>\n          <SectionLabel\n            type=\"dark\"\n          >\n            Enter Amount to Pay\n          </SectionLabel>\n\n          <AmountToPayTextField />\n\n          <PaymentFromTo\n            to=\"Ian Robinson\"\n          />\n\n          <GeneralActionButton>Enter Amount to Pay</GeneralActionButton>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default AmountToPayForm;\n","import React from 'react';\nimport styles from './TodaysDate.module.css';\n\nconst TodaysDate = () => {\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const date = new Date();\n  const day = date.getDate();\n  const month = date.getMonth();\n  const year = date.getFullYear();\n\n  return (\n    <h1\n      className={styles.todaysDate}\n    >\n      {`${months[month]}, ${day} ${year}`}\n    </h1>\n  );\n};\n\nexport default TodaysDate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TextField.module.css';\nimport ExclamationError from '../ExclamationError/ExclamationError';\n\nconst validator = require('email-validator');\n\nclass TextField extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      value: '',\n      isFocused: false,\n      isInErrorState: false\n    };\n  }\n\n  handleFocus = () => {\n    this.setState({\n      isFocused: true\n    });\n  }\n\n  handleBlur = () => {\n    const { type } = this.props;\n    const { value } = this.state;\n\n    if (type === 'name') {\n      this.setState({\n        isInErrorState: value.trim() === '',\n        isFocused: false\n      });\n    } else if (type === 'email') {\n      this.setState({\n        isInErrorState: !validator.validate(value.trim()),\n        isFocused: false\n      });\n    } else {\n      this.setState({\n        isInErrorState: false,\n        isFocused: false\n      });\n    }\n  }\n\n  render() {\n    const { isInErrorState } = this.state;\n    const { isFocused } = this.state;\n    const { placeholder } = this.props;\n    const { onChangeEvent } = this.props;\n\n    let textFieldContainerClassNames = '';\n\n    if (isFocused) {\n      textFieldContainerClassNames = `${styles.textFieldContainer} ${styles.focused}`;\n    } else if (isInErrorState) {\n      textFieldContainerClassNames = `${styles.textFieldContainer} ${styles.error}`;\n    } else {\n      textFieldContainerClassNames = `${styles.textFieldContainer}`;\n    }\n\n    return (\n      <div className={textFieldContainerClassNames}>\n        <input\n          className={styles.textField}\n          type=\"text\"\n          placeholder={placeholder}\n          onFocus={this.handleFocus}\n          onBlur={this.handleBlur}\n          onChange={(event) => {\n            if (onChangeEvent !== undefined) {\n              onChangeEvent(event);\n            }\n\n            this.setState({\n              value: event.target.value\n            });\n          }}\n        />\n        <ExclamationError labelType=\"TextField\" shouldDisplay={isInErrorState && !isFocused} />\n      </div>\n    );\n  }\n}\n\nTextField.propTypes = {\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n  onChangeEvent: PropTypes.func\n};\n\nexport default TextField;\n","import React from 'react';\nimport AmountToPayForm from '../AmountToPayForm/AmountToPayForm';\nimport ValuesContext from '../../Contexts/ValuesContext';\nimport TodaysDate from '../TodaysDate/TodaysDate';\nimport SectionLabel from '../SectionLabel/SectionLabel';\nimport TextField from '../TextField/TextField';\nimport Grid from '../Grid/Grid';\nimport styles from './PaymentForm.module.css';\n\nconst validator = require('email-validator');\n\nclass PaymentForm extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: '',\n      email: '',\n      amountEntered: '',\n      isFormComplete: false\n    };\n  }\n\n  handleAmountEnteredChanged = (value) => {\n    this.setState({\n      amountEntered: value\n    }, () => {\n      this.checkIfFormIsComplete();\n    });\n  }\n\n  handleEmailChanged = (event) => {\n    this.setState({\n      email: event.target.value\n    }, () => {\n      this.checkIfFormIsComplete();\n    });\n  }\n\n  handleNameChanged = (event) => {\n    this.setState({\n      name: event.target.value\n    }, () => {\n      this.checkIfFormIsComplete();\n    });\n  }\n\n  checkIfFormIsComplete = () => {\n    const { name } = this.state;\n    const { email } = this.state;\n    const { amountEntered } = this.state;\n\n    if (name.trim() !== '' && validator.validate(email.trim()) && amountEntered !== '') {\n      this.setState({\n        isFormComplete: true\n      });\n    } else {\n      this.setState({\n        isFormComplete: false\n      });\n    }\n  }\n\n  formCompletionHandler = () => {\n    const { isFormComplete } = this.state;\n\n    if (isFormComplete) {\n      console.log('Perform API request');\n    }\n  }\n\n  render() {\n    const { isFormComplete } = this.state;\n    const { amountEntered } = this.state;\n    const { name } = this.state;\n\n    return (\n      <div\n        className={styles.overallGrid}\n      >\n        <div className={styles.paymentForm}>\n          <TodaysDate />\n          <Grid\n            columns=\"one\"\n          >\n            <SectionLabel\n              type=\"dark\"\n            >\n              Client Information\n            </SectionLabel>\n            <TextField\n              type=\"name\"\n              placeholder=\"Name\"\n              onChangeEvent={this.handleNameChanged}\n            />\n            <TextField\n              type=\"email\"\n              placeholder=\"Email\"\n              onChangeEvent={this.handleEmailChanged}\n            />\n          </Grid>\n          <Grid\n            columns=\"one\"\n          >\n            <SectionLabel\n              type=\"dark\"\n            >\n              Card Information\n            </SectionLabel>\n            <TextField\n              placeholder=\"1234 1234 1234 1234\"\n            />\n            <TextField\n              placeholder=\"MM/YY\"\n            />\n            <TextField\n              placeholder=\"CVC\"\n            />\n          </Grid>\n        </div>\n        <div className={styles.amountToPayForm}>\n          <ValuesContext.Provider value={{\n            name,\n            handleAmountEnteredChanged: this.handleAmountEnteredChanged,\n            amountEntered,\n            isFormComplete,\n            formCompletionHandler: this.formCompletionHandler\n          }}\n          >\n            <AmountToPayForm />\n          </ValuesContext.Provider>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PaymentForm;\n","import React from 'react';\nimport './App.css';\nimport PaymentForm from './Components/PaymentForm/PaymentForm';\n\nfunction App() {\n  return (\n    <PaymentForm />\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}