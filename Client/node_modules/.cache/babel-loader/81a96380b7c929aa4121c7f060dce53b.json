{"ast":null,"code":"var _jsxFileName = \"/Users/danielvalencia/Documents/Programming/Web Development/React Apps/usdc-payment-portal/src/Components/AmountToPayTextField/AmountToPayTextField.js\";\nimport React from 'react';\nimport styles from './AmountToPayTextField.module.css';\nimport ExclamationError from '../ExclamationError/ExclamationError';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AmountToPayTextField extends React.Component {\n  constructor() {\n    super();\n\n    this.handleAmountToPayTextFieldContainerClicked = () => {\n      const {\n        isFocused\n      } = this.state;\n\n      if (this.amountToPayTextFieldRef !== null) {\n        if (!isFocused) {\n          this.amountToPayTextFieldRef.current.focus();\n          this.setState({\n            isFocused: true\n          });\n        }\n      }\n    };\n\n    this.handleAmountToPayTextFieldSetFocused = () => {\n      this.setState({\n        isFocused: true\n      });\n    };\n\n    this.handleAmountToPayTextFieldBlured = () => {\n      const {\n        value\n      } = this.state;\n      this.setState({\n        isFocused: false,\n        isInErrorState: value === ''\n      });\n    };\n\n    this.handleTextChange = event => {\n      const regex = /^(([1-9]{1}\\d{0,2})?)$/;\n\n      if (!regex.test(event.target.value)) {\n        this.setState({});\n      } else {\n        this.setState({\n          value: event.target.value\n        });\n      }\n    };\n\n    this.amountToPayTextFieldRef = /*#__PURE__*/React.createRef(null);\n    this.state = {\n      isFocused: false,\n      isInErrorState: false,\n      value: ''\n    };\n  }\n\n  render() {\n    const {\n      isInErrorState\n    } = this.state;\n    const {\n      value\n    } = this.state;\n    const {\n      isFocused\n    } = this.state;\n    let amountToPayTextFiedlContainerClassNames = '';\n\n    if (isFocused) {\n      amountToPayTextFiedlContainerClassNames = `${styles.amountToPayTextFieldContainer} ${styles.focused}`;\n    } else if (isInErrorState) {\n      amountToPayTextFiedlContainerClassNames = `${styles.amountToPayTextFieldContainer} ${styles.error}`;\n    } else {\n      amountToPayTextFiedlContainerClassNames = `${styles.amountToPayTextFieldContainer}`;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: amountToPayTextFiedlContainerClassNames,\n      onMouseDown: event => {\n        if (!isFocused) {\n          this.handleAmountToPayTextFieldContainerClicked();\n          event.preventDefault();\n        }\n      },\n      onKeyDown: this.handleAmountToPayTextFieldContainerClicked,\n      role: \"textbox\",\n      tabIndex: 0,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.dollarSignContainer,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.dollarSign,\n          children: \"$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: value,\n        type: \"text\",\n        className: styles.amountToPayTextField,\n        placeholder: \"0.00\",\n        onFocus: this.handleAmountToPayTextFieldSetFocused,\n        onBlur: this.handleAmountToPayTextFieldBlured,\n        ref: this.amountToPayTextFieldRef,\n        onChange: event => {\n          this.handleTextChange(event);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AmountToPayTextField;","map":{"version":3,"sources":["/Users/danielvalencia/Documents/Programming/Web Development/React Apps/usdc-payment-portal/src/Components/AmountToPayTextField/AmountToPayTextField.js"],"names":["React","styles","ExclamationError","AmountToPayTextField","Component","constructor","handleAmountToPayTextFieldContainerClicked","isFocused","state","amountToPayTextFieldRef","current","focus","setState","handleAmountToPayTextFieldSetFocused","handleAmountToPayTextFieldBlured","value","isInErrorState","handleTextChange","event","regex","test","target","createRef","render","amountToPayTextFiedlContainerClassNames","amountToPayTextFieldContainer","focused","error","preventDefault","dollarSignContainer","dollarSign","amountToPayTextField"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styles from './AmountToPayTextField.module.css';\nimport ExclamationError from '../ExclamationError/ExclamationError';\n\nclass AmountToPayTextField extends React.Component {\n  constructor() {\n    super();\n\n    this.amountToPayTextFieldRef = React.createRef(null);\n    this.state = {\n      isFocused: false,\n      isInErrorState: false,\n      value: ''\n    };\n  }\n\n  handleAmountToPayTextFieldContainerClicked = () => {\n    const { isFocused } = this.state;\n\n    if (this.amountToPayTextFieldRef !== null) {\n      if (!isFocused) {\n        this.amountToPayTextFieldRef.current.focus();\n        this.setState({\n          isFocused: true\n        });\n      }\n    }\n  }\n\n  handleAmountToPayTextFieldSetFocused = () => {\n    this.setState({\n      isFocused: true\n    });\n  }\n\n  handleAmountToPayTextFieldBlured = () => {\n    const { value } = this.state;\n\n    this.setState({\n      isFocused: false,\n      isInErrorState: value === ''\n    });\n  }\n\n  handleTextChange = (event) => {\n    const regex = /^(([1-9]{1}\\d{0,2})?)$/;\n\n    if (!regex.test(event.target.value)) {\n      this.setState({\n      });\n    } else {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }\n\n  render() {\n    const { isInErrorState } = this.state;\n    const { value } = this.state;\n    const { isFocused } = this.state;\n\n    let amountToPayTextFiedlContainerClassNames = '';\n\n    if (isFocused) {\n      amountToPayTextFiedlContainerClassNames = `${styles.amountToPayTextFieldContainer} ${styles.focused}`;\n    } else if (isInErrorState) {\n      amountToPayTextFiedlContainerClassNames = `${styles.amountToPayTextFieldContainer} ${styles.error}`;\n    } else {\n      amountToPayTextFiedlContainerClassNames = `${styles.amountToPayTextFieldContainer}`;\n    }\n\n    return (\n      <div\n        className={amountToPayTextFiedlContainerClassNames}\n        onMouseDown={(event) => {\n          if (!isFocused) {\n            this.handleAmountToPayTextFieldContainerClicked();\n            event.preventDefault();\n          }\n        }}\n        onKeyDown={this.handleAmountToPayTextFieldContainerClicked}\n        role=\"textbox\"\n        tabIndex={0}\n      >\n        <div className={styles.dollarSignContainer}>\n          <span className={styles.dollarSign}>$</span>\n        </div>\n        <input\n          value={value}\n          type=\"text\"\n          className={styles.amountToPayTextField}\n          placeholder=\"0.00\"\n          onFocus={this.handleAmountToPayTextFieldSetFocused}\n          onBlur={this.handleAmountToPayTextFieldBlured}\n          ref={this.amountToPayTextFieldRef}\n          onChange={(event) => {\n            this.handleTextChange(event);\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default AmountToPayTextField;\n"]},"metadata":{},"sourceType":"module"}