{"ast":null,"code":"var _jsxFileName = \"/Users/danielvalencia/Documents/Programming/Web Development/React Apps/usdc-payment-portal/src/Components/PaymentForm/PaymentForm.js\";\nimport React from 'react';\nimport AmountToPayForm from '../AmountToPayForm/AmountToPayForm';\nimport ValuesContext from '../../Contexts/ValuesContext';\nimport TodaysDate from '../TodaysDate/TodaysDate';\nimport SectionLabel from '../SectionLabel/SectionLabel';\nimport TextField from '../TextField/TextField';\nimport Grid from '../Grid/Grid';\nimport styles from './PaymentForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validator = require('email-validator');\n\nclass PaymentForm extends React.Component {\n  constructor() {\n    super();\n\n    this.handleAmountEnteredChanged = value => {\n      this.setState({\n        amountEntered: value\n      }, () => {\n        this.checkIfFormIsComplete();\n      });\n    };\n\n    this.handleEmailChanged = event => {\n      this.setState({\n        email: event.target.value\n      }, () => {\n        this.checkIfFormIsComplete();\n      });\n    };\n\n    this.handleNameChanged = event => {\n      this.setState({\n        name: event.target.value\n      }, () => {\n        this.checkIfFormIsComplete();\n      });\n    };\n\n    this.checkIfFormIsComplete = () => {\n      const {\n        name\n      } = this.state;\n      const {\n        email\n      } = this.state;\n      const {\n        amountEntered\n      } = this.state;\n\n      if (name.trim() !== '' && validator.validate(email.trim()) && amountEntered !== '') {\n        this.setState({\n          isFormComplete: true\n        });\n      } else {\n        this.setState({\n          isFormComplete: false\n        });\n      }\n    };\n\n    this.formCompletionHandler = () => {\n      console.log('clicked');\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      amountEntered: '',\n      isFormComplete: false\n    };\n  }\n\n  render() {\n    const {\n      isFormComplete\n    } = this.state;\n    const {\n      amountEntered\n    } = this.state;\n    const {\n      name\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.overallGrid,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.paymentForm,\n        children: [/*#__PURE__*/_jsxDEV(TodaysDate, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          columns: \"one\",\n          children: [/*#__PURE__*/_jsxDEV(SectionLabel, {\n            type: \"dark\",\n            children: \"Client Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"name\",\n            placeholder: \"Name\",\n            onChangeEvent: this.handleNameChanged\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            type: \"email\",\n            placeholder: \"Email\",\n            onChangeEvent: this.handleEmailChanged\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          columns: \"one\",\n          children: [/*#__PURE__*/_jsxDEV(SectionLabel, {\n            type: \"dark\",\n            children: \"Card Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            placeholder: \"1234 1234 1234 1234\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            placeholder: \"MM/YY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            placeholder: \"CVC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.amountToPayForm,\n        children: /*#__PURE__*/_jsxDEV(ValuesContext.Provider, {\n          value: {\n            name,\n            handleAmountEnteredChanged: this.handleAmountEnteredChanged,\n            amountEntered,\n            isFormComplete,\n            formCompletionHandler\n          },\n          children: /*#__PURE__*/_jsxDEV(AmountToPayForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PaymentForm;","map":{"version":3,"sources":["/Users/danielvalencia/Documents/Programming/Web Development/React Apps/usdc-payment-portal/src/Components/PaymentForm/PaymentForm.js"],"names":["React","AmountToPayForm","ValuesContext","TodaysDate","SectionLabel","TextField","Grid","styles","validator","require","PaymentForm","Component","constructor","handleAmountEnteredChanged","value","setState","amountEntered","checkIfFormIsComplete","handleEmailChanged","event","email","target","handleNameChanged","name","state","trim","validate","isFormComplete","formCompletionHandler","console","log","render","overallGrid","paymentForm","amountToPayForm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AmountToPayForm from '../AmountToPayForm/AmountToPayForm';\nimport ValuesContext from '../../Contexts/ValuesContext';\nimport TodaysDate from '../TodaysDate/TodaysDate';\nimport SectionLabel from '../SectionLabel/SectionLabel';\nimport TextField from '../TextField/TextField';\nimport Grid from '../Grid/Grid';\nimport styles from './PaymentForm.module.css';\n\nconst validator = require('email-validator');\n\nclass PaymentForm extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: '',\n      email: '',\n      amountEntered: '',\n      isFormComplete: false\n    };\n  }\n\n  handleAmountEnteredChanged = (value) => {\n    this.setState({\n      amountEntered: value\n    }, () => {\n      this.checkIfFormIsComplete();\n    });\n  }\n\n  handleEmailChanged = (event) => {\n    this.setState({\n      email: event.target.value\n    }, () => {\n      this.checkIfFormIsComplete();\n    });\n  }\n\n  handleNameChanged = (event) => {\n    this.setState({\n      name: event.target.value\n    }, () => {\n      this.checkIfFormIsComplete();\n    });\n  }\n\n  checkIfFormIsComplete = () => {\n    const { name } = this.state;\n    const { email } = this.state;\n    const { amountEntered } = this.state;\n\n    if (name.trim() !== '' && validator.validate(email.trim()) && amountEntered !== '') {\n      this.setState({\n        isFormComplete: true\n      });\n    } else {\n      this.setState({\n        isFormComplete: false\n      });\n    }\n  }\n\n  formCompletionHandler = () => {\n    console.log('clicked');\n  }\n\n  render() {\n    const { isFormComplete } = this.state;\n    const { amountEntered } = this.state;\n    const { name } = this.state;\n\n    return (\n      <div\n        className={styles.overallGrid}\n      >\n        <div className={styles.paymentForm}>\n          <TodaysDate />\n          <Grid\n            columns=\"one\"\n          >\n            <SectionLabel\n              type=\"dark\"\n            >\n              Client Information\n            </SectionLabel>\n            <TextField\n              type=\"name\"\n              placeholder=\"Name\"\n              onChangeEvent={this.handleNameChanged}\n            />\n            <TextField\n              type=\"email\"\n              placeholder=\"Email\"\n              onChangeEvent={this.handleEmailChanged}\n            />\n          </Grid>\n          <Grid\n            columns=\"one\"\n          >\n            <SectionLabel\n              type=\"dark\"\n            >\n              Card Information\n            </SectionLabel>\n            <TextField\n              placeholder=\"1234 1234 1234 1234\"\n            />\n            <TextField\n              placeholder=\"MM/YY\"\n            />\n            <TextField\n              placeholder=\"CVC\"\n            />\n          </Grid>\n        </div>\n        <div className={styles.amountToPayForm}>\n          <ValuesContext.Provider value={{\n            name,\n            handleAmountEnteredChanged: this.handleAmountEnteredChanged,\n            amountEntered,\n            isFormComplete,\n            formCompletionHandler\n          }}\n          >\n            <AmountToPayForm />\n          </ValuesContext.Provider>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PaymentForm;\n"]},"metadata":{},"sourceType":"module"}