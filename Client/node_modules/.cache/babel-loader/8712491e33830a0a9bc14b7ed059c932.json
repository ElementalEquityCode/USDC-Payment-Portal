{"ast":null,"code":"import _classCallCheck from\"/Users/danielvalencia/Documents/Programming/Web Development/React Apps/usdc-payment-portal/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/danielvalencia/Documents/Programming/Web Development/React Apps/usdc-payment-portal/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/danielvalencia/Documents/Programming/Web Development/React Apps/usdc-payment-portal/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/danielvalencia/Documents/Programming/Web Development/React Apps/usdc-payment-portal/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import AmountToPayForm from'../AmountToPayForm/AmountToPayForm';import ValuesContext from'../../Contexts/ValuesContext';import TodaysDate from'../TodaysDate/TodaysDate';import SectionLabel from'../SectionLabel/SectionLabel';import TextField from'../TextField/TextField';import Grid from'../Grid/Grid';import styles from'./PaymentForm.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var validator=require('email-validator');var PaymentForm=/*#__PURE__*/function(_React$Component){_inherits(PaymentForm,_React$Component);var _super=_createSuper(PaymentForm);function PaymentForm(){var _this;_classCallCheck(this,PaymentForm);_this=_super.call(this);_this.handleAmountEnteredChanged=function(value){_this.setState({amountEntered:value},function(){_this.checkIfFormIsComplete();});};_this.handleEmailChanged=function(event){_this.setState({email:event.target.value},function(){_this.checkIfFormIsComplete();});};_this.handleNameChanged=function(event){_this.setState({name:event.target.value},function(){_this.checkIfFormIsComplete();});};_this.checkIfFormIsComplete=function(){var name=_this.state.name;var email=_this.state.email;var amountEntered=_this.state.amountEntered;if(name.trim()!==''&&validator.validate(email.trim())&&amountEntered!==''){_this.setState({isFormComplete:true});}else{_this.setState({isFormComplete:false});}};_this.formCompletionHandler=function(){var isFormComplete=_this.state.isFormComplete;if(isFormComplete){console.log('Perform API request');}};_this.state={name:'',email:'',amountEntered:'',isFormComplete:false};return _this;}_createClass(PaymentForm,[{key:\"render\",value:function render(){var isFormComplete=this.state.isFormComplete;var amountEntered=this.state.amountEntered;var name=this.state.name;return/*#__PURE__*/_jsxs(\"div\",{className:styles.overallGrid,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.paymentForm,children:[/*#__PURE__*/_jsx(TodaysDate,{}),/*#__PURE__*/_jsxs(Grid,{columns:\"one\",children:[/*#__PURE__*/_jsx(SectionLabel,{type:\"dark\",children:\"Client Information\"}),/*#__PURE__*/_jsx(TextField,{type:\"name\",placeholder:\"Name\",onChangeEvent:this.handleNameChanged}),/*#__PURE__*/_jsx(TextField,{type:\"email\",placeholder:\"Email\",onChangeEvent:this.handleEmailChanged})]}),/*#__PURE__*/_jsxs(Grid,{columns:\"one\",children:[/*#__PURE__*/_jsx(SectionLabel,{type:\"dark\",children:\"Card Information\"}),/*#__PURE__*/_jsx(TextField,{placeholder:\"1234 1234 1234 1234\"}),/*#__PURE__*/_jsx(TextField,{placeholder:\"MM/YY\"}),/*#__PURE__*/_jsx(TextField,{placeholder:\"CVC\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.amountToPayForm,children:/*#__PURE__*/_jsx(ValuesContext.Provider,{value:{name:name,handleAmountEnteredChanged:this.handleAmountEnteredChanged,amountEntered:amountEntered,isFormComplete:isFormComplete,formCompletionHandler:this.formCompletionHandler},children:/*#__PURE__*/_jsx(AmountToPayForm,{})})})]});}}]);return PaymentForm;}(React.Component);export default PaymentForm;","map":{"version":3,"sources":["/Users/danielvalencia/Documents/Programming/Web Development/React Apps/usdc-payment-portal/Client/src/Components/PaymentForm/PaymentForm.js"],"names":["React","AmountToPayForm","ValuesContext","TodaysDate","SectionLabel","TextField","Grid","styles","validator","require","PaymentForm","handleAmountEnteredChanged","value","setState","amountEntered","checkIfFormIsComplete","handleEmailChanged","event","email","target","handleNameChanged","name","state","trim","validate","isFormComplete","formCompletionHandler","console","log","overallGrid","paymentForm","amountToPayForm","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AmountToPayForm from '../AmountToPayForm/AmountToPayForm';\nimport ValuesContext from '../../Contexts/ValuesContext';\nimport TodaysDate from '../TodaysDate/TodaysDate';\nimport SectionLabel from '../SectionLabel/SectionLabel';\nimport TextField from '../TextField/TextField';\nimport Grid from '../Grid/Grid';\nimport styles from './PaymentForm.module.css';\n\nconst validator = require('email-validator');\n\nclass PaymentForm extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: '',\n      email: '',\n      amountEntered: '',\n      isFormComplete: false\n    };\n  }\n\n  handleAmountEnteredChanged = (value) => {\n    this.setState({\n      amountEntered: value\n    }, () => {\n      this.checkIfFormIsComplete();\n    });\n  }\n\n  handleEmailChanged = (event) => {\n    this.setState({\n      email: event.target.value\n    }, () => {\n      this.checkIfFormIsComplete();\n    });\n  }\n\n  handleNameChanged = (event) => {\n    this.setState({\n      name: event.target.value\n    }, () => {\n      this.checkIfFormIsComplete();\n    });\n  }\n\n  checkIfFormIsComplete = () => {\n    const { name } = this.state;\n    const { email } = this.state;\n    const { amountEntered } = this.state;\n\n    if (name.trim() !== '' && validator.validate(email.trim()) && amountEntered !== '') {\n      this.setState({\n        isFormComplete: true\n      });\n    } else {\n      this.setState({\n        isFormComplete: false\n      });\n    }\n  }\n\n  formCompletionHandler = () => {\n    const { isFormComplete } = this.state;\n\n    if (isFormComplete) {\n      console.log('Perform API request');\n    }\n  }\n\n  render() {\n    const { isFormComplete } = this.state;\n    const { amountEntered } = this.state;\n    const { name } = this.state;\n\n    return (\n      <div\n        className={styles.overallGrid}\n      >\n        <div className={styles.paymentForm}>\n          <TodaysDate />\n          <Grid\n            columns=\"one\"\n          >\n            <SectionLabel\n              type=\"dark\"\n            >\n              Client Information\n            </SectionLabel>\n            <TextField\n              type=\"name\"\n              placeholder=\"Name\"\n              onChangeEvent={this.handleNameChanged}\n            />\n            <TextField\n              type=\"email\"\n              placeholder=\"Email\"\n              onChangeEvent={this.handleEmailChanged}\n            />\n          </Grid>\n          <Grid\n            columns=\"one\"\n          >\n            <SectionLabel\n              type=\"dark\"\n            >\n              Card Information\n            </SectionLabel>\n            <TextField\n              placeholder=\"1234 1234 1234 1234\"\n            />\n            <TextField\n              placeholder=\"MM/YY\"\n            />\n            <TextField\n              placeholder=\"CVC\"\n            />\n          </Grid>\n        </div>\n        <div className={styles.amountToPayForm}>\n          <ValuesContext.Provider value={{\n            name,\n            handleAmountEnteredChanged: this.handleAmountEnteredChanged,\n            amountEntered,\n            isFormComplete,\n            formCompletionHandler: this.formCompletionHandler\n          }}\n          >\n            <AmountToPayForm />\n          </ValuesContext.Provider>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PaymentForm;\n"]},"metadata":{},"sourceType":"module"}