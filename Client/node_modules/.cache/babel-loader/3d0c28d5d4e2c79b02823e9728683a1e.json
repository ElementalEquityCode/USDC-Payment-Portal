{"ast":null,"code":"var _jsxFileName = \"/Users/danielvalencia/Documents/Programming/Web Development/React Apps/usdc-payment-portal/src/Components/TextField/TextField.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TextField.module.css';\nimport ExclamationError from '../ExclamationError/ExclamationError';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validator = require('email-validator');\n\nclass TextField extends React.Component {\n  constructor() {\n    super();\n\n    this.handleFocus = () => {\n      this.setState({\n        isFocused: true\n      });\n    };\n\n    this.handleBlur = () => {\n      const {\n        type\n      } = this.props;\n      const {\n        value\n      } = this.state;\n\n      if (type === 'name') {\n        this.setState({\n          isInErrorState: value.trim() === '',\n          isFocused: false\n        });\n      } else if (type === 'email') {\n        this.setState({\n          isInErrorState: !validator.validate(value.trim()),\n          isFocused: false\n        });\n      } else {\n        this.setState({\n          isInErrorState: false,\n          isFocused: false\n        });\n      }\n    };\n\n    this.state = {\n      value: '',\n      isFocused: false,\n      isInErrorState: false\n    };\n  }\n\n  render() {\n    const {\n      isInErrorState\n    } = this.state;\n    const {\n      isFocused\n    } = this.state;\n    const {\n      placeholder\n    } = this.props;\n    const {\n      onChangeEvent\n    } = this.props;\n    let textFieldContainerClassNames = '';\n\n    if (isFocused) {\n      textFieldContainerClassNames = `${styles.textFieldContainer} ${styles.focused}`;\n    } else if (isInErrorState) {\n      textFieldContainerClassNames = `${styles.textFieldContainer} ${styles.error}`;\n    } else {\n      textFieldContainerClassNames = `${styles.textFieldContainer}`;\n    }\n\n    let exclamationErrorContainerClassNames = '';\n\n    if (isFocused) {\n      console.log('here');\n      exclamationErrorContainerClassNames = `${styles.hidden}`;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: textFieldContainerClassNames,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.textField,\n        type: \"text\",\n        placeholder: placeholder,\n        onFocus: this.handleFocus,\n        onBlur: this.handleBlur,\n        onChange: event => {\n          if (onChangeEvent !== undefined) {\n            onChangeEvent(event);\n          }\n\n          this.setState({\n            value: event.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), isInErrorState ? /*#__PURE__*/_jsxDEV(ExclamationError, {\n        className: exclamationErrorContainerClassNames,\n        labelType: \"TextField\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 27\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nTextField.propTypes = {\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n  onChangeEvent: PropTypes.func\n};\nexport default TextField;","map":{"version":3,"sources":["/Users/danielvalencia/Documents/Programming/Web Development/React Apps/usdc-payment-portal/src/Components/TextField/TextField.js"],"names":["React","PropTypes","styles","ExclamationError","validator","require","TextField","Component","constructor","handleFocus","setState","isFocused","handleBlur","type","props","value","state","isInErrorState","trim","validate","render","placeholder","onChangeEvent","textFieldContainerClassNames","textFieldContainer","focused","error","exclamationErrorContainerClassNames","console","log","hidden","textField","event","undefined","target","propTypes","string","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TextField.module.css';\nimport ExclamationError from '../ExclamationError/ExclamationError';\n\nconst validator = require('email-validator');\n\nclass TextField extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      value: '',\n      isFocused: false,\n      isInErrorState: false\n    };\n  }\n\n  handleFocus = () => {\n    this.setState({\n      isFocused: true\n    });\n  }\n\n  handleBlur = () => {\n    const { type } = this.props;\n    const { value } = this.state;\n\n    if (type === 'name') {\n      this.setState({\n        isInErrorState: value.trim() === '',\n        isFocused: false\n      });\n    } else if (type === 'email') {\n      this.setState({\n        isInErrorState: !validator.validate(value.trim()),\n        isFocused: false\n      });\n    } else {\n      this.setState({\n        isInErrorState: false,\n        isFocused: false\n      });\n    }\n  }\n\n  render() {\n    const { isInErrorState } = this.state;\n    const { isFocused } = this.state;\n    const { placeholder } = this.props;\n    const { onChangeEvent } = this.props;\n\n    let textFieldContainerClassNames = '';\n\n    if (isFocused) {\n      textFieldContainerClassNames = `${styles.textFieldContainer} ${styles.focused}`;\n    } else if (isInErrorState) {\n      textFieldContainerClassNames = `${styles.textFieldContainer} ${styles.error}`;\n    } else {\n      textFieldContainerClassNames = `${styles.textFieldContainer}`;\n    }\n\n    let exclamationErrorContainerClassNames = '';\n\n    if (isFocused) {\n      console.log('here');\n      exclamationErrorContainerClassNames = `${styles.hidden}`;\n    }\n\n    return (\n      <div className={textFieldContainerClassNames}>\n        <input\n          className={styles.textField}\n          type=\"text\"\n          placeholder={placeholder}\n          onFocus={this.handleFocus}\n          onBlur={this.handleBlur}\n          onChange={(event) => {\n            if (onChangeEvent !== undefined) {\n              onChangeEvent(event);\n            }\n\n            this.setState({\n              value: event.target.value\n            });\n          }}\n        />\n        {isInErrorState ? <ExclamationError className={exclamationErrorContainerClassNames} labelType=\"TextField\" /> : null}\n      </div>\n    );\n  }\n}\n\nTextField.propTypes = {\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n  onChangeEvent: PropTypes.func\n};\n\nexport default TextField;\n"]},"metadata":{},"sourceType":"module"}